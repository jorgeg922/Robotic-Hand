{
  "name": "inet",
  "description": "functions (aton and ntoa) to convert IPv4 string addresses to numeric format and vice versa",
  "version": "0.0.3",
  "author": {
    "name": "T. Budiman",
    "email": "tbudiman@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mywebclass/inet.git"
  },
  "main": "./index.js",
  "dependencies": {
    "underscore.string": "*"
  },
  "devDependencies": {
    "should": "*"
  },
  "license": "MIT",
  "readme": "inet\n====\n\nInstall with:\n\n```javascript\n$ npm install inet\n```\n\nSample usage script:\n\n```javascript\nvar inet = require(\"inet\");\n\nconsole.log(inet.aton(\"125.121.234.1\"));\nconsole.log(inet.ntoa(2107846951));\n```\n\nAPI Documentation\n-----------------\n\n### aton(str)\n\nGiven the dotted-quad representation of an IPv4 network address as a string, returns an integer that represents the numeric value of the address in network byte order (big endian). `aton()` returns `null` if it does not understand its argument. For IP Address of 'a.b.c.d', the numerical representation would be: a * 256^3 + b * 256^2 + c * 256 + d.\n\n### ntoa(int)\n\nGiven a numeric IPv4 network address in network byte order, returns the dotted-quad representation of the address as a binary string. ntoa() returns null if it does not understand its argument.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mywebclass/inet/issues"
  },
  "_id": "inet@0.0.3",
  "dist": {
    "shasum": "79c72be637de5d26487f240a768b99cd1eee88fe"
  },
  "_from": "inet@",
  "_resolved": "https://registry.npmjs.org/inet/-/inet-0.0.3.tgz"
}
